{"version":3,"sources":["components/PostItem.js","components/PostsDisplay.js","components/CreatePost.js","App.js","store.js","index.js"],"names":["PostItem","_ref","post","onEdit","React","createElement","className","title","content","onClick","PostsDisplay","posts","useSelector","state","map","key","id","CreatePost","postToEdit","onSubmit","setTitle","useState","setContent","dispatch","useDispatch","e","preventDefault","Date","now","type","payload","placeholder","value","onChange","target","App","setPostToEdit","handleSubmit","initialState","store","createStore","arguments","length","undefined","action","ReactDOM","createRoot","document","getElementById","render","Provider"],"mappings":"mMAYeA,MAVEC,IAAsB,IAArBC,KAAEA,EAAIC,OAAEA,GAAQF,EAChC,OACEG,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,MAAIC,UAAU,cAAcJ,EAAKK,OACjCH,IAAAC,cAAA,KAAGC,UAAU,cAAcJ,EAAKM,SAChCJ,IAAAC,cAAA,UAAQC,UAAU,SAASG,QAASA,IAAMN,EAAOD,IAAO,UCS/CQ,MAZMT,IAAgB,IAAfE,OAAEA,GAAQF,EAC9B,MAAMU,EAAQC,YAAYC,GAASA,EAAMF,OAEzC,OACEP,IAAAC,cAAA,OAAKC,UAAU,iBACZK,EAAMG,IAAIZ,GACTE,IAAAC,cAACL,EAAQ,CAACe,IAAKb,EAAKc,GAAId,KAAMA,EAAMC,OAAQA,OCmCrCc,MA1CIhB,IAA8B,IAA7BiB,WAAEA,EAAUC,SAAEA,GAAUlB,EAC1C,MAAOM,EAAOa,GAAYC,mBAASH,EAAaA,EAAWX,MAAQ,KAC5DC,EAASc,GAAcD,mBAASH,EAAaA,EAAWV,QAAU,IACnEe,EAAWC,cAqBjB,OACEpB,IAAAC,cAAA,QAAMc,SApBcM,IAGpB,GAFAA,EAAEC,iBAEEnB,GAASC,EAAS,CACpB,MAAMN,EAAOgB,EACT,IAAKA,EAAYX,QAAOC,WACxB,CAAEQ,GAAIW,KAAKC,MAAOrB,QAAOC,WAE7Be,EAAS,CACPM,KAAMX,EAAa,YAAc,WACjCY,QAAS5B,IAGXkB,EAAS,IACTE,EAAW,IACXH,OAMAf,IAAAC,cAAA,SACEwB,KAAK,OACLE,YAAY,QACZC,MAAOzB,EACP0B,SAAWR,GAAML,EAASK,EAAES,OAAOF,SAErC5B,IAAAC,cAAA,YACE0B,YAAY,UACZC,MAAOxB,EACPyB,SAAWR,GAAMH,EAAWG,EAAES,OAAOF,SAEvC5B,IAAAC,cAAA,UAAQC,UAAU,SAASuB,KAAK,UAAUX,EAAa,cAAgB,iBCd9DiB,MApBf,WACE,MAAOjB,EAAYkB,GAAiBf,mBAAS,MAU7C,OACEjB,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAAA,MAAIC,UAAU,WAAU,aACxBF,IAAAC,cAACY,EAAU,CAACC,WAAYA,EAAYC,SAPnBkB,KACnBD,EAAc,SAOZhC,IAAAC,cAACK,EAAY,CAACP,OAZED,IAClBkC,EAAclC,eCRlB,MAAMoC,EAAe,CACnB3B,MAAO,IAqBM4B,MAFDC,YAhBE,WAAkC,IAAjC3B,EAAK4B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGH,EAAcM,EAAMH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3C,OAAQC,EAAOf,MACb,IAAK,WACH,MAAO,IAAKhB,EAAOF,MAAO,IAAIE,EAAMF,MAAOiC,EAAOd,UACpD,IAAK,YACH,MAAO,IACFjB,EACHF,MAAOE,EAAMF,MAAMG,IAAIZ,GACrBA,EAAKc,KAAO4B,EAAOd,QAAQd,GAAK4B,EAAOd,QAAU5B,IAGvD,QACE,OAAOW,KCXAgC,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACH7C,IAAAC,cAAC6C,IAAQ,CAACX,MAAOA,GACfnC,IAAAC,cAAC8B,EAAG","file":"static/js/main.c4ef14ee.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst PostItem = ({ post, onEdit }) => {\r\n  return (\r\n    <div className=\"post-item\">\r\n      <h2 className=\"post-Color\">{post.title}</h2>\r\n      <p className=\"post-Color\">{post.content}</p>\r\n      <button className=\"button\" onClick={() => onEdit(post)}>Edit</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostItem;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport PostItem from './PostItem';\r\n\r\nconst PostsDisplay = ({ onEdit }) => {\r\n  const posts = useSelector(state => state.posts);\r\n\r\n  return (\r\n    <div className=\"posts-display\">\r\n      {posts.map(post => (\r\n        <PostItem key={post.id} post={post} onEdit={onEdit} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostsDisplay;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst CreatePost = ({ postToEdit, onSubmit }) => {\r\n  const [title, setTitle] = useState(postToEdit ? postToEdit.title : '');\r\n  const [content, setContent] = useState(postToEdit ? postToEdit.content : '');\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (title && content) {\r\n      const post = postToEdit\r\n        ? { ...postToEdit, title, content }\r\n        : { id: Date.now(), title, content };\r\n      \r\n      dispatch({\r\n        type: postToEdit ? 'EDIT_POST' : 'ADD_POST',\r\n        payload: post,\r\n      });\r\n\r\n      setTitle('');\r\n      setContent('');\r\n      onSubmit();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Title\"\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n      />\r\n      <textarea\r\n        placeholder=\"Content\"\r\n        value={content}\r\n        onChange={(e) => setContent(e.target.value)}\r\n      />\r\n      <button className=\"button\" type=\"submit\">{postToEdit ? 'Update Post' : 'Create Post'}</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CreatePost;\r\n","\r\nimport React, { useState } from 'react';\r\nimport './App.css';\r\nimport PostsDisplay from './components/PostsDisplay';\r\nimport CreatePost from './components/CreatePost';\r\n\r\nfunction App() {\r\n  const [postToEdit, setPostToEdit] = useState(null);\r\n\r\n  const handleEdit = (post) => {\r\n    setPostToEdit(post);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    setPostToEdit(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1 className=\"heading\">Add Posts</h1>\r\n      <CreatePost postToEdit={postToEdit} onSubmit={handleSubmit} />\r\n      <PostsDisplay onEdit={handleEdit} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createStore } from 'redux';\r\n\r\nconst initialState = {\r\n  posts: [],\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'ADD_POST':\r\n      return { ...state, posts: [...state.posts, action.payload] };\r\n    case 'EDIT_POST':\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map(post =>\r\n          post.id === action.payload.id ? action.payload : post\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './store';\r\nimport { Provider } from 'react-redux';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>\r\n);\r\n"],"sourceRoot":""}